median split trees fast lookup technique frequently occuring keys split trees technique searching sets keys highly skewed frequency distributions   split tree binary search tree node key valuesa node  maximally frequent key subtree split partitions remaining keys  respect lexical ordering left subtrees  median split tree mst  lexical median nodes descendents split force search tree perfectly  balanced achieving space efficient representation tree high search speed  unlike  frequency ordered binary search trees cost successful search mst log bounded  stable minimal values  mst built key ordering set  frequencies time log opposed optimum binary search tree  discussion  application msts dictionary lookup english presented performance obtained contrasted  techniques cacm november sheil ba 