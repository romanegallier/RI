dynamic microprogramming processor organization programming dynamically microprogrammed processor characterized small word readwrite  micro storage  access time storage similar cycle time machine  nsec  microstorage data subroutines  micro instructions  processor differ conventional perform purely combinatorial operations  sequencing control microinstruction presence readwrite microstorage  permits flexible assignment resources readonly storage  processor  developed paper stresses simultaneous operation microinstruction adder  shifter masker testing facilities processor  microassembly language developed  overhead involved subroutine linkages analyzed  efficiency flexible software linkage  scheme examined overhead subroutine characteristics  finally examples  problemoriented programming considered resulting coding compared  assembly language version technology normalized cacm april tucker flynn 