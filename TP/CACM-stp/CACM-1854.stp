multiprogramming machine coding computer organization author feels interrupt feature modern computers  potent source programming pitfalls errors heavily contribute  unreliability programs making  programming scheme presented avoids concept  interrupt permits specification concurrent pseudoconcurrent activities supposedly  perspicuous manner  intended serve basis construction operating systems  prime examples programs concurrent activities  scheme includes set basic  instructions generation termination synchronization parallel processes  set routines  representing instructions simulating hypothetical machine organization implemented  test ibm  programs instructions written presented  cacm september wirth 