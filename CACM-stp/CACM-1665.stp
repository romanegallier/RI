automatic generation efficient lexical processors finite state techniques practical application theory finitestate automata generate  lexical processors dealt tutorial article aed rword system developed  mit part aed1 system  system accepts input description multicharacter  items words allowable language terms subset regular expressions output  system lexical processor reads string characters combines items  defined regular expressions  output item identified code number  pointer block storage characters character count item  processors  produced system based finitestate machines  state machine corresponds  unique condition lexical processing character string  state character read  machine state  transition actions based  character read  system operation 1966 processors generated  compared favorably speed carefully handcoded programs accomplish task  lexical processors  aedo mad produced  techniques employed independent  nature items evaluated  word events substituted character string  processors generalized decisionmaking mechanisms based ordered sequence  events  system range applications area lexical  processing  convenient advantages speed important consideration   designing system automatic generation lexical processor goal processor  completely eliminated backup rereading nearly fast handcoded processors  analyze language detect errors convenient easy cacm december 1968 johnson porter ackley ross 